// vim: set noet ts=2 sw=2:
//
// Singular integer right triangles

import std.stdio;
import factor;

void main() {

	// a = m^2 - n^2
	// b = 2mn
	// c = m^2 + n^2
	//
	// The triple generated by m and n is primitive if and only if m and n are
	// coprime and (m - 2) is odd.

	immutable MAX = 1_500_000;

	int[] cnts;
	cnts.length = MAX + 1;

	int m = 2;
	while (true) {
		int n;
		for (n = 1; n < m; n++) {
			int a = m * m - n * n;
			int b = 2 * m * n;
			int c = m * m + n * n;
			int perimeter = a + b + c;
			if (perimeter > MAX)
				break;
			if ((m - n) % 2 == 1 && gcd(m, n) == 1) {
				for (int p = perimeter; p <= MAX; p += perimeter) {
					cnts[p]++;
				}
			}
		}
		if (n == 1)
			break;
		m++;
	}

	int ret;
	foreach (_, cnt; cnts) {
		if (cnt == 1)
			ret++;
	}
	writeln(ret);
}

